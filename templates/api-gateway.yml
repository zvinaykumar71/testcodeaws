Resources:
  ApiGatewayRestApi:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Body: ${file(./templates/swagger.yaml)}
  PostAdminLoginApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postAdminLogin-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostNurseLoginApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postNurseLogin-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostPatientLoginApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postPatientLogin-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  GetCentersApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-getCenters-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  GetCenterApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-getCenter-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostCenterApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postCenter-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PutCenterApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-putCenter-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  GetNursesApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-getNurses-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  GettNurseApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-getNurse-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostNurseApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postNurse-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PutNurseApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-putNurse-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  GetPatientsApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-getPatients-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  GettPatientApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-getPatient-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostPatientApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postPatient-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostAcceptPolicyApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postAcceptPolicy-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostInitializePatientApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postInitializePatient-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostSendLoginURLPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postSendLoginURL-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PutPatientApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-putPatient-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  GetStatusesApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-getStatuses-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  PostStatusApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-postStatus-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  DeleteStatusApiPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName: "remote-patient-monitoring-deleteStatus-${self:provider.stage}"
      Action: "lambda:InvokeFunction"
      Principal: "apigateway.amazonaws.com"
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ApiGatewayRestApi
      StageName: ${self:provider.stage}
Outputs:
  Id:
    Value:
      Ref: ApiGatewayRestApi
